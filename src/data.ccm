module;

#include <string>
#include <functional>
#include <format>

export module test_lib:data;

namespace test_lib{
  export struct TestResult{
    std::string message;
    bool status;
  };

  export class TestConfig{
    std::function<void()> _test_func;
    public:
    std::string test_name;
    
    TestConfig(decltype(test_name) name, decltype(_test_func) func) : 
      test_name {std::move(name)},
      _test_func {std::move(func)}
    {}

    TestResult run_test() const noexcept{
      try{
        _test_func();
        return TestResult{ 
          std::format("{} is successful", test_name), 
          true 
        };
      }
      catch (const std::exception& e) {
        return TestResult{ 
          std::format(
            "{} have failed with the following details\n Exception : {}, Error : {}\n",
            test_name, 
            typeid(e).name(),
            e.what()
          ), 
          false
        };
      }
    }
  };
}